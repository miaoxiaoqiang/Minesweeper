<local:XPWindow x:Class="Minesweeper.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:Minesweeper"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:ic="clr-namespace:MvvmLight.Command;assembly=MvvmLight"
                xmlns:CustomConverter="clr-namespace:Minesweeper.Converters"
                xmlns:model="clr-namespace:Minesweeper.Model"
                xmlns:sys="clr-namespace:System;assembly=mscorlib"
                mc:Ignorable="d"
                Title="扫雷"
                Height="430" Width="430"
                ResizeMode="NoResize"
                ShowInTaskbar="False"
                SizeToContent="WidthAndHeight">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="-1" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <local:XPWindow.Resources>
        <Style x:Key="HorizontalSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Margin" Value="3,2,3,2"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Height="1"
                                SnapsToDevicePixels="true"
                                Margin="{TemplateBinding Margin}"
                                Opacity="0.8"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                BorderThickness="0" Padding="0,0,0,2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <!--<ColumnDefinition x:Name="ColIcon" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>-->
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="ColNext" Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<ContentPresenter Grid.Column="0"
                                                  Margin="5 0"
                                                  x:Name="Icon"
                                                  VerticalAlignment="Center" 
                                                  ContentSource="Icon"/>
                                <Grid Grid.Column="0" 
                                      Visibility="Hidden" 
                                      Margin="5 0" 
                                      x:Name="GlyphPanel"
                                      VerticalAlignment="Center">
                                    <Viewbox VerticalAlignment="Center"
                                             FlowDirection="LeftToRight"
                                             Width="18" Height="18">
                                        <Path Fill="{TemplateBinding Foreground}" Data="M422.36247 839.786465c-13.320377 13.421684-34.909068 13.421684-48.126091 0l-10.69355-10.800997 0 0-11.398608-11.502985-50.145074-50.544163c-0.097214-0.201591 0-0.500397-0.201591-0.604774L72.380494 533.085224c-13.320377-13.421684-13.320377-35.218106 0-48.535413l72.132854-72.842005c13.319353-13.408381 34.907021-13.408381 48.224328 0l205.814506 209.252815L831.363631 184.208419c13.218046-13.414521 34.806737-13.414521 48.124044 0l72.134901 72.842005c13.317307 13.408381 13.317307 35.113729 0 48.52211L422.36247 839.786465 422.36247 839.786465z"/>
                                    </Viewbox>
                                </Grid>-->
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Visibility="Hidden"
                                          Grid.Column="0"
                                          Margin="5, 0, 0, 3" 
                                          x:Name="GlyphPanel"
                                          VerticalAlignment="Center">
                                        <Viewbox VerticalAlignment="Center"
                                                 FlowDirection="LeftToRight"
                                                 Width="18" Height="18">
                                            <Path Fill="{TemplateBinding Foreground}" Data="M422.36247 839.786465c-13.320377 13.421684-34.909068 13.421684-48.126091 0l-10.69355-10.800997 0 0-11.398608-11.502985-50.145074-50.544163c-0.097214-0.201591 0-0.500397-0.201591-0.604774L72.380494 533.085224c-13.320377-13.421684-13.320377-35.218106 0-48.535413l72.132854-72.842005c13.319353-13.408381 34.907021-13.408381 48.224328 0l205.814506 209.252815L831.363631 184.208419c13.218046-13.414521 34.806737-13.414521 48.124044 0l72.134901 72.842005c13.317307 13.408381 13.317307 35.113729 0 48.52211L422.36247 839.786465 422.36247 839.786465z"/>
                                        </Viewbox>
                                    </Grid>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      x:Name="HeaderHost"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True"
                                                      ContentSource="Header"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1"
                                                  Margin="8, 0, 8, 0"
                                                  x:Name="IGTHost"
                                                  ContentSource="InputGestureText"
                                                  VerticalAlignment="Center"/>
                                <Grid Grid.Column="2"
                                      Margin="5 0"
                                      x:Name="ArrowPanel"
                                      VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right"
                                       x:Name="SubMenuPopup" 
                                       Focusable="false">
                                    <Border x:Name="SubMenuBorder" BorderBrush="LightGray"
                                            BorderThickness="1" Padding="2,2,2,2"
                                            Background="White">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6 1"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <!--<Setter Property="MinWidth" Value="0" TargetName="ColIcon"/>-->
                                <Setter Property="Width" Value="Auto" TargetName="ColNext"/>
                                <!--<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>-->
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#3368c4" TargetName="Border"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="#3368c4" TargetName="Border"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6 1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="Padding" Value="5 2"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Padding" Value="5 2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!--<Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>-->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <!--<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <!--<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </local:XPWindow.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Menu Background="#ece9d8" x:Name="MainMenu"
                  FontFamily="{StaticResource UIFont}" FontSize="14" FontWeight="Regular">
                <MenuItem Header="游戏(_G)">
                    <MenuItem Header="初级(_B)" InputGestureText="Ctrl+B"
                              IsChecked="{Binding Level, Mode=TwoWay, Converter={x:Static CustomConverter:LevelToIsCheckedConverter.Instance}, ConverterParameter={x:Static model:GameLevel.Primary}}"
                              Command="{Binding ApplyGameLevelCommand, Mode=OneWay}"
                              CommandParameter="{x:Static model:GameLevel.Primary}"/>
                    <MenuItem Header="中级(_I)" InputGestureText="Ctrl+I"
                              IsChecked="{Binding Level, Mode=TwoWay, Converter={x:Static CustomConverter:LevelToIsCheckedConverter.Instance}, ConverterParameter={x:Static model:GameLevel.Intermediate}}"
                              Command="{Binding ApplyGameLevelCommand, Mode=OneWay}"
                              CommandParameter="{x:Static model:GameLevel.Intermediate}"/>
                    <MenuItem Header="高级(_E)" InputGestureText="Ctrl+E"
                              IsChecked="{Binding Level, Mode=TwoWay, Converter={x:Static CustomConverter:LevelToIsCheckedConverter.Instance}, ConverterParameter={x:Static model:GameLevel.Advanced}}"
                              Command="{Binding ApplyGameLevelCommand, Mode=OneWay}"
                              CommandParameter="{x:Static model:GameLevel.Advanced}"/>
                    <MenuItem Header="自定义..." InputGestureText="Ctrl+Shift+C"
                              x:Name="CustomGame"
                              IsChecked="{Binding Level, Mode=TwoWay, Converter={x:Static CustomConverter:LevelToIsCheckedConverter.Instance}, ConverterParameter={x:Static model:GameLevel.Custom}}"/>
                    <Separator Style="{StaticResource HorizontalSeparatorStyle}"/>
                    <MenuItem Header="标记(?)" InputGestureText="Ctrl+H"
                              IsChecked="{Binding UseMark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsCheckable="True"/>
                    <Separator Style="{StaticResource HorizontalSeparatorStyle}"/>
                    <MenuItem Header="统计信息" InputGestureText="Ctrl+Shift+T"
                              x:Name="ShowHeroRank"
                              ToolTip="如果没有设置存档信息，界面是不显示统计信息的"/>
                </MenuItem>
                <MenuItem Header="功能(_F)">
                    <MenuItem Header="全部插旗" InputGestureText="Ctrl+F, A"
                              Command="{Binding MarkAllFlagCommand, Mode=OneWay}"
                              CommandParameter="{x:Static sys:Boolean.TrueString }"/>
                    <MenuItem Header="全部去旗" InputGestureText="Ctrl+F, C"
                              Command="{Binding MarkAllFlagCommand, Mode=OneWay}"
                              CommandParameter="{x:Static sys:Boolean.FalseString }"/>
                    <Separator Style="{StaticResource HorizontalSeparatorStyle}"/>
                    <MenuItem Header="存档设置" InputGestureText="Ctrl+O, A"
                              x:Name="SetName"
                              ToolTip="将游戏记录保存文件中。&#x0a;游戏默认不会保存记录，需要先设置才生效"/>
                </MenuItem>
                <MenuItem Header="关于(_H)">
                    <MenuItem Header="关于扫雷(_A)..." InputGestureText="Ctrl+Shift+A"
                              x:Name="AboutGame"/>
                </MenuItem>
            </Menu>
        </Grid>
        <Border Grid.Row="1" Grid.Column="0"
                Background="#cccccc"
                Margin="2"
                CornerRadius="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Margin="8" Grid.Row="0">
                    <Rectangle Fill="#808080" Width="2"
                               VerticalAlignment="stretch" HorizontalAlignment="Left"/>
                    <Rectangle Fill="#808080" Height="2"
                               VerticalAlignment="Top" HorizontalAlignment="stretch"/>
                    <Rectangle Fill="#ffffff" Width="2"
                               VerticalAlignment="stretch" HorizontalAlignment="Right"/>
                    <Rectangle Fill="#ffffff" Height="2"
                               VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>
                    <Grid Margin="8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Height="25"
                                   Padding="3, 4, 1, 0"
                                   Grid.Column="0"
                                   Text="{Binding MineDigit, Mode=OneWay}"
                                   FontSize="26"
                                   TextAlignment="Center"
                                   FontFamily="{StaticResource DigitalFont}"
                                   Background="Black"
                                   Foreground="#7FFF0000"
                                   HorizontalAlignment="Left"/>
                        <TextBlock HorizontalAlignment="Left"
                                   Padding="3, 4, 1, 0"
                                   Grid.Column="0"
                                   x:Name="counttext"
                                   Background="Transparent"
                                   Foreground="Red"
                                   Height="25"
                                   FontSize="26" FontFamily="{StaticResource DigitalFont}"
                                   ToolTip="雷数">
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static CustomConverter:MineStatisticConverter.Instance}">
                                    <Binding Path="Game.MinesCount" Mode="OneWay"/>
                                    <Binding Path="Game.FlagCount" Mode="OneWay"/>
                                    <Binding Path="MaxCells" Mode="OneWay"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Button Grid.Column="1" HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="26" Height="26" ToolTip="点击表情可重新开始游戏"
                                x:Name="FaceButton">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Image x:Name="image"
                                                       Width="26" Height="26"
                                                       RenderOptions.BitmapScalingMode="HighQuality"
                                                       Source="{Binding FaceStatus, Mode=TwoWay, Converter={x:Static CustomConverter:FaceStatusToImageConverter.Instance}}"/>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsFocused" Value="True"/>
                                                            <Condition Property="IsMouseCaptured" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="image" Property="Source" Value="{Binding FaceStatus, Mode=TwoWay, Converter={x:Static CustomConverter:FaceStatusToImageConverter.Instance}, ConverterParameter='Clicked'}"/>
                                                    </MultiTrigger>
                                                    <DataTrigger Binding="{Binding GameStatus, Mode=OneWay}" Value="{x:Static model:GameStatus.Fail}">
                                                        <DataTrigger.EnterActions>
                                                            <RemoveStoryboard BeginStoryboardName="xuanzhuan3" />
                                                            <BeginStoryboard x:Name="xuanzhuan3">
                                                                <Storyboard Duration="00:00:02.0000">
                                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                                                   Duration="00:00:02.0000" FillBehavior="Stop">
                                                                        <DiscreteBooleanKeyFrame KeyTime="00:00:00.0001" Value="False"/>
                                                                    </BooleanAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding GameStatus, Mode=OneWay}" Value="{x:Static model:GameStatus.Win}">
                                                        <DataTrigger.EnterActions>
                                                            <RemoveStoryboard BeginStoryboardName="xuanzhuan4" />
                                                            <BeginStoryboard x:Name="xuanzhuan4">
                                                                <Storyboard Duration="00:00:02.0000">
                                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                                                   Duration="00:00:02.0000" FillBehavior="Stop">
                                                                        <DiscreteBooleanKeyFrame KeyTime="00:00:00.0001" Value="False"/>
                                                                    </BooleanAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <ic:EventToCommand PassEventArgsToCommand="True"
                                                       Command="{Binding FaceClickCommand, Mode=OneWay}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <TextBlock Height="25" Grid.Column="2"
                                   Padding="3, 4, 1, 0"
                                   Text="88:88"
                                   FontSize="26"
                                   TextAlignment="Center"
                                   FontFamily="{StaticResource DigitalFont}"
                                   Background="Black"
                                   Foreground="#7FFF0000"
                                   HorizontalAlignment="Right"/>
                        <TextBlock Height="25" Grid.Column="2"
                                   Padding="3, 4, 1, 0"
                                   FontSize="26"
                                   Text="{Binding Game.Duration, Mode=OneWay, Converter={x:Static CustomConverter:SecondsToTimeConverter.Instance}, ConverterParameter='Front'}"
                                   TextAlignment="Center"
                                   FontFamily="{StaticResource DigitalFont}"
                                   Background="Transparent"
                                   Foreground="Red"
                                   HorizontalAlignment="Right"
                                   ToolTip="时间消耗"/>
                    </Grid>
                </Grid>
                <ListBox Grid.Row="1"
                         x:Name="listbox"
                         Margin="8"
                         ItemsSource="{Binding Game.Cells, Mode=OneWay}"
                         SelectedItem="{Binding Path=DataContext.SelectedCell, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                         BorderThickness="0">
                    <ListBox.Template>
                        <ControlTemplate>
                            <Grid>
                                <ItemsPresenter Margin="3"/>
                                <Rectangle x:Name="leftThickness" Fill="#808080"
                                           Width="3"
                                           VerticalAlignment="stretch" HorizontalAlignment="Left"/>
                                <Rectangle x:Name="topThickness" Fill="#808080"
                                           Height="3"
                                           VerticalAlignment="Top" HorizontalAlignment="stretch"/>
                                <Rectangle x:Name="rightThickness" Fill="#ffffff"
                                           Width="3"
                                           VerticalAlignment="stretch" HorizontalAlignment="Right"/>
                                <Rectangle x:Name="buttomThickness" Fill="#ffffff"
                                           Height="3"
                                           VerticalAlignment="Bottom" HorizontalAlignment="stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Width="{Binding WrapPanelWidth, Mode=OneWay}"
                                       Height="{Binding WrapPanelHeight, Mode=OneWay}"/>
                            <!--只要设置了Width，元素就会自动填充剩余的空间，高度自动会扩展。但为什么还要加Height？
                                因为我给窗体设置了SizeChanged事件，如果不直接设置Height，每次高度改变时都会引发SizeChanged。
                                所以只要整体一次性改变Width和Height，SizeChanged只会引发一次
                            -->
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Grid>
                                            <ContentPresenter/>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseDown">
                                                    <ic:EventToCommand PassEventArgsToCommand="True"
                                                                       Command="{Binding Path=DataContext.ItemMouseDownCommand, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="PreviewMouseUp">
                                                    <ic:EventToCommand PassEventArgsToCommand="True"
                                                                       Command="{Binding Path=DataContext.ItemMouseUpCommand, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Viewbox Width="24" Height="24"
                                                 Stretch="Uniform" StretchDirection="Both">
                                            <Image Source="{Binding CellImage, Mode=OneWay, Converter={x:Static CustomConverter:CellStatusToImageConverter.Instance}}"
                                                   SnapsToDevicePixels="True" UseLayoutRounding="True" RenderOptions.BitmapScalingMode="HighQuality"/>
                                        </Viewbox>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <ic:EventToCommand Command="{Binding SelectItemChangedCommand, Mode=OneWay}"
                                               PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <Path Grid.Row="1" Margin="8"
                      x:Name="WinPath"
                      Stroke="#FF000000" StrokeThickness="2"
                      Width="175" Height="35"
                      RenderTransformOrigin="0.5,0.5"
                      Stretch="Uniform"
                      Data="M 30.2125,25.175L 44.45,3.09995L 29.675,3.09995L 22.8625,13.3875L 16.5875,3.09995L 1.5,3.09995L 15.8125,25.175L 15.8125,52.7L 30.2125,52.7L 30.2125,25.175 Z M 51.8937,48.6437C 55.6813,52.4146 60.1875,54.3 65.4125,54.3C 70.6375,54.3 75.1437,52.4146 78.9313,48.6437C 82.7187,44.8729 84.6125,40.3833 84.6125,35.175C 84.6125,29.9167 82.7187,25.3896 78.9313,21.5938C 75.1437,17.7979 70.6375,15.9 65.4125,15.9C 60.1875,15.9 55.6813,17.7979 51.8937,21.5938C 48.1062,25.3896 46.2125,29.9167 46.2125,35.175C 46.2125,40.3833 48.1062,44.8729 51.8937,48.6437 Z M 61.5687,31.1501C 62.7396,30.05 64.1541,29.5001 65.8125,29.5001C 67.4708,29.5001 68.8854,30.05 70.0562,31.1501C 71.227,32.2501 71.8125,33.5792 71.8125,35.1375C 71.8125,36.6959 71.227,38.0125 70.0562,39.0876C 68.8854,40.1625 67.4708,40.7 65.8125,40.7C 64.1541,40.7 62.7396,40.1625 61.5687,39.0876C 60.3979,38.0125 59.8125,36.6959 59.8125,35.1375C 59.8125,33.5792 60.3979,32.2501 61.5687,31.1501 Z M 121.1,49.5688C 123.975,46.4146 125.412,42.0042 125.412,36.3375L 125.412,16.7L 112.612,16.7L 112.612,37.6125C 112.612,39.6708 111.667,40.7 109.775,40.7C 107.933,40.7 107.012,39.6708 107.012,37.6125L 107.012,16.7L 93.4125,16.7L 93.4125,37.3625C 93.4125,42.0792 94.9687,46.0812 98.0812,49.3687C 101.194,52.6563 104.971,54.3 109.412,54.3C 114.329,54.3 118.225,52.7229 121.1,49.5688 Z M 202.419,50.05C 204.948,47.2166 206.212,43.2 206.212,38L 206.212,16.7L 192.613,16.7L 192.613,36.7375C 192.613,39.3792 191.842,40.7 190.3,40.7C 188.642,40.7 187.813,39.3542 187.813,36.6625L 187.813,16.7L 174.212,16.7L 174.212,36.7375C 174.212,38.3792 174.058,39.45 173.75,39.95C 173.442,40.45 172.929,40.7 172.212,40.7C 170.879,40.7 170.212,39.3542 170.212,36.6625L 170.212,16.7L 156.612,16.7L 156.612,39.6C 156.612,43.675 157.981,47.1437 160.719,50.0063C 163.456,52.8687 166.775,54.3 170.675,54.3C 174.675,54.3 178.279,52.5792 181.487,49.1375C 185.021,52.5792 188.55,54.3 192.075,54.3C 196.442,54.3 199.89,52.8833 202.419,50.05 Z M 219.662,12.7375C 220.954,14.0458 222.5,14.7 224.3,14.7C 226.092,14.7 227.633,14.0458 228.925,12.7375C 230.217,11.4292 230.862,9.87082 230.862,8.06253C 230.862,6.24582 230.217,4.69794 228.925,3.41876C 227.633,2.13959 226.092,1.50003 224.3,1.50003C 222.5,1.50003 220.954,2.13959 219.662,3.41876C 218.371,4.69794 217.725,6.24582 217.725,8.06253C 217.725,9.87082 218.371,11.4292 219.662,12.7375 Z M 217.412,52.7L 231.012,52.7L 231.012,17.5L 217.412,17.5L 217.412,52.7 Z M 260.612,52.7L 273.412,52.7L 273.412,33.7125C 273.412,28.0875 271.975,23.7125 269.1,20.5875C 266.225,17.4625 262.329,15.9 257.412,15.9C 252.971,15.9 249.194,17.5291 246.081,20.7875C 242.969,24.0458 241.412,28.0125 241.412,32.6875L 241.412,52.7L 255.012,52.7L 255.012,32.55C 255.012,30.5167 255.933,29.5 257.775,29.5C 259.667,29.5 260.612,30.5167 260.612,32.55L 260.612,52.7 Z " >
                    <Path.Style>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="30"/>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GameStatus, Mode=OneWay}" Value="{x:Static model:GameStatus.Win}">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="xuanzhuan1" />
                                        <BeginStoryboard x:Name="xuanzhuan1">
                                            <Storyboard Duration="00:00:02.0000">
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Duration="00:00:02.0000" FillBehavior="Stop">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0001" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="00:00:00.5000"
                                                                 From="30"
                                                                 To="390"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                                 Duration="00:00:00.5000" AutoReverse="True"
                                                                 From="1" To="1.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                    <Path.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF207035"/>
                            <GradientStop Color="#FF57DF35" Offset="1"/>
                            <GradientStop Color="#FF0D7A0F" Offset="0.701"/>
                            <GradientStop Color="#FF33A70A" Offset="0.328000009059906"/>
                        </LinearGradientBrush>
                    </Path.Fill>
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="30"/>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Grid.Row="1" Margin="8"
                      x:Name="FailPath"
                      Stroke="#FF000000" StrokeThickness="2"
                      Width="175" Height="32"
                      RenderTransformOrigin="0.5,0.5"
                      Stretch="Fill"
                      Data="M 29.7125,23.075L 43.95,0.999992L 29.175,0.999992L 22.3625,11.2875L 16.0875,0.999992L 1,0.999992L 15.3125,23.075L 15.3125,50.6L 29.7125,50.6L 29.7125,23.075 Z M 51.3937,46.5438C 55.1812,50.3146 59.6875,52.2 64.9125,52.2C 70.1375,52.2 74.6437,50.3146 78.4312,46.5438C 82.2187,42.7729 84.1125,38.2834 84.1125,33.075C 84.1125,27.8167 82.2187,23.2896 78.4312,19.4938C 74.6437,15.698 70.1375,13.8 64.9125,13.8C 59.6875,13.8 55.1812,15.698 51.3937,19.4938C 47.6062,23.2896 45.7125,27.8167 45.7125,33.075C 45.7125,38.2834 47.6062,42.7729 51.3937,46.5438 Z M 61.0687,29.0501C 62.2395,27.9501 63.6541,27.4001 65.3125,27.4001C 66.9708,27.4001 68.3854,27.9501 69.5562,29.0501C 70.727,30.1501 71.3125,31.4792 71.3125,33.0376C 71.3125,34.5959 70.727,35.9126 69.5562,36.9876C 68.3854,38.0626 66.9708,38.6001 65.3125,38.6001C 63.6541,38.6001 62.2395,38.0626 61.0687,36.9876C 59.8979,35.9126 59.3125,34.5959 59.3125,33.0376C 59.3125,31.4792 59.8979,30.1501 61.0687,29.0501 Z M 120.6,47.4688C 123.475,44.3146 124.912,39.9042 124.912,34.2375L 124.912,14.6001L 112.112,14.6001L 112.112,35.5125C 112.112,37.5709 111.167,38.6001 109.275,38.6001C 107.433,38.6001 106.512,37.5709 106.512,35.5125L 106.512,14.6001L 92.9125,14.6001L 92.9125,35.2625C 92.9125,39.9792 94.4687,43.9813 97.5812,47.2688C 100.694,50.5563 104.471,52.2 108.912,52.2C 113.829,52.2 117.725,50.623 120.6,47.4688 Z M 172.2,50.6001L 176.112,50.6001L 176.112,36.2L 175.3,36.2C 173.142,36.2 171.671,35.8459 170.887,35.1375C 170.104,34.4292 169.712,32.8875 169.712,30.5125L 169.712,1.00005L 155.312,1.00005L 155.312,32.8751C 155.312,38.4167 156.81,42.7563 159.806,45.8938C 162.802,49.0313 166.933,50.6001 172.2,50.6001 Z M 185.794,46.5438C 189.581,50.3146 194.087,52.2 199.312,52.2C 204.537,52.2 209.044,50.3146 212.831,46.5438C 216.619,42.7729 218.512,38.2834 218.512,33.075C 218.512,27.8167 216.619,23.2896 212.831,19.4938C 209.044,15.698 204.537,13.8 199.312,13.8C 194.087,13.8 189.581,15.698 185.794,19.4938C 182.006,23.2896 180.113,27.8167 180.113,33.075C 180.113,38.2834 182.006,42.7729 185.794,46.5438 Z M 195.469,29.0501C 196.639,27.9501 198.054,27.4001 199.712,27.4001C 201.371,27.4001 202.785,27.9501 203.956,29.0501C 205.127,30.1501 205.712,31.4792 205.712,33.0376C 205.712,34.5959 205.127,35.9126 203.956,36.9876C 202.785,38.0626 201.371,38.6001 199.712,38.6001C 198.054,38.6001 196.639,38.0626 195.469,36.9876C 194.298,35.9126 193.712,34.5959 193.712,33.0376C 193.712,31.4792 194.298,30.1501 195.469,29.0501 Z M 245.65,29.4126C 246.342,28.6042 247.696,28.2 249.712,28.2L 249.712,13.8L 245.525,13.8C 243,13.8501 240.775,14.2417 238.85,14.9751C 236.925,15.7084 235.304,16.7709 233.987,18.1626C 232.671,19.5542 231.815,20.9834 231.419,22.45C 231.023,23.9167 230.721,26.4584 230.512,30.075C 230.346,32.325 229.773,33.9084 228.794,34.825C 227.815,35.7417 225.987,36.2 223.312,36.2L 223.312,50.6001L 225.225,50.6001C 236.975,50.6001 243.329,44.9875 244.287,33.7625C 244.504,31.6709 244.958,30.2209 245.65,29.4126 Z M 271.912,33.8L 292.75,33.8L 292.912,31.4001C 292.912,26.4334 291.117,22.2584 287.525,18.8751C 283.933,15.4917 279.567,13.8 274.425,13.8C 269.025,13.8 264.49,15.6459 260.819,19.3376C 257.148,23.0292 255.312,27.5292 255.312,32.8376C 255.312,38.2042 257.14,42.7729 260.794,46.5438C 264.448,50.3146 268.917,52.2 274.2,52.2C 278.358,52.2 282.408,50.6375 286.35,47.5125L 278.512,38.1125C 277.237,39.5042 275.933,40.2 274.6,40.2C 272.892,40.2 271.517,39.4563 270.475,37.9688C 269.433,36.4813 268.912,34.5167 268.912,32.075C 268.912,29.6917 269.546,27.7834 270.812,26.3501C 272.079,24.9167 273.567,24.2 275.275,24.2C 277.842,24.2 279.362,25.5334 279.837,28.2L 272.8,28.2C 272.342,29.2584 272.112,30.2501 272.112,31.175C 272.112,32.05 272.046,32.925 271.912,33.8 Z " >
                    <Path.Style>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-30"/>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GameStatus, Mode=OneWay}" Value="{x:Static model:GameStatus.Fail}">
                                    <DataTrigger.EnterActions>
                                        <RemoveStoryboard BeginStoryboardName="xuanzhuan2" />
                                        <BeginStoryboard x:Name="xuanzhuan2">
                                            <Storyboard Duration="00:00:02.0000">
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Duration="00:00:02.0000" FillBehavior="Stop">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00.0001" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="00:00:00.5000"
                                                                 From="-30"
                                                                 To="-390"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                                 Duration="00:00:00.5000" AutoReverse="True"
                                                                 From="1" To="1.5"/>
                                                
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                    <Path.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF410202"/>
                            <GradientStop Color="#FFE33030" Offset="1"/>
                            <GradientStop Color="#FF7A0D0D" Offset="0.701"/>
                            <GradientStop Color="#FFA70A0A" Offset="0.328000009059906"/>
                        </LinearGradientBrush>
                    </Path.Fill>
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-30"/>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
    </Grid>
</local:XPWindow>
